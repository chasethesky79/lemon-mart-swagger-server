openapi: 3.0.0
info:
  title: LemonMart
  description: LemonMartAPI
  version: "1.0.0"

servers:
- url: http://localhost:3000
  description: Local Environment
- url: https://mystagingserver.com/v1
  description: Staging Environment
- url: https://myprodserver.com/v1
  description: Production Environment

components:
  schemas:
   Role:
    type: string
    enum: [clerk, cashier, manager]
   Name:
    type: object
    properties:
      first:
        type: string
      middle:
        type: string
      last:
        type: string
   User:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      name:
        $ref: '#/components/schemas/Name'
      picture:
        type: string
      role:
        $ref: '#/components/schemas/Role'
      userStatus:
        type: boolean
      lastModified:
        type: string
        format: date
      lastModifiedBy:
        type: string
   UserArray:
          type: array
          items: 
            $ref: '#/components/schemas/User'
   Users:
      type: object
      properties:
        total:
          type: number
          format: int32
        items:
          $ref: '#/components/schemas/UserArray'
  parameters:
      offsetParam:
        in: query
        name: offset
        required: false
        schema:
          type: integer
          minimum: 0
          description: The number of items to skip before starting to collect the result set
      limitParam:
        in: query
        name: limit
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 50
          default: 20
        description: The number of items to return
paths: 
  /v1/users:
       get:
         description: |
           Searches and returns 'User' objects
           Optional query params determines values of returned array
         parameters:
          - in: query
            name: search
            required: false
            schema:
              type: string
            description: Search text
          - $ref: '#/components/parameters/offsetParam'
          - $ref: '#/components/parameters/limitParam'
         responses:
          '200': # Response
            description: OK
            content: # Response body
              application/json: # Media Type
                schema: 
                 $ref: '#/components/schemas/Users'
  /v1/users/{id}:
    get:
      description: Gets a `User` object by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User's unique id
      responses:
         '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
    put:
      summary: Updates an existing `User`
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User's unique id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
         '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
                

        
          

        

